@model CreateCategoryDTO

@{
    ViewData["Title"] = "Update";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Update Category</h1>
    <a asp-action="Index" class="d-none d-sm-inline-block btn btn-sm bg-success shadow text-white">
        Back to Categories
    </a>
</div>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Update">
            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="NameAr" class="control-label"></label>
                <input asp-for="NameAr" class="form-control" />
                <span asp-validation-for="NameAr" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NameEn" class="control-label"></label>
                <input asp-for="NameEn" class="form-control" />
                <span asp-validation-for="NameEn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ParentCategoryId" class="control-label"> Parent Category </label>
                @Html.DropDownList("ParentCategoryId", ViewBag.Categories as SelectList, "None", new { @class = "form-control" })
                <span asp-validation-for="ParentCategoryId" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
